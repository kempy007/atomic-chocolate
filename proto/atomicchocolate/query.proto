syntax = "proto3";
package kempy007.atomicchocolate.atomicchocolate;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "atomicchocolate/params.proto";
import "atomicchocolate/project.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/kempy007/atomic-chocolate/x/atomicchocolate/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kempy007/atomic-chocolate/atomicchocolate/params";
  }
  // Queries a list of Projects items.
	rpc Projects(QueryProjectsRequest) returns (QueryProjectsResponse) {
		option (google.api.http).get = "/kempy007/atomic-chocolate/atomicchocolate/projects";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryProjectsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryProjectsResponse {
//  string title = 1;
//  string description = 2;
//  string literature = 3;
  repeated Project Project = 1;

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
